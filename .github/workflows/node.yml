name: 'node'
on:
  workflow_dispatch:

  pull_request:
    paths-ignore:
      - 'orb/**'
      - 'gradle/**'
      - 'src/**'
      - 'build.gradle.kts'
      - 'settings.gradle.kts'
      - 'gradle.properties'
      - 'gradlew'
      - 'gradlew.bat'
      - '.github/workflows/gradle.yml'
  push:
    branches:
      - iurko/fix-native-runs
jobs:

  test-action:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        directory: [
          'tests/py_error' # 'tests/cpp',
        ]
        arguments: ['--ide,QDPY,--log-level,debug']
        pr: [ 'false' ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/checkout@v4
        with:
          repository: 'JetBrains/code-analytics-examples'
          fetch-depth: 0
          path: 'tests'
      - name: Remove unwanted files
        run:
          rm build.gradle.kts settings.gradle.kts
        shell: bash
      - name: Emulate pull request
        run: |
          git config --global user.name qodana-bot
          git config --global user.email qodana-support@jetbrains.com
          git init
          git remote add origin https://github.com/JetBrains/code-analytics-examples.git
          echo "test" > README.md
          git add README.md
          if [ -f ".keep" ]; then
              while IFS= read -r file; do
                  clean_file=$(echo "$file" | tr -d '\r' | sed 's/[[:space:]]*$//')
                  git add "$clean_file"
              done < ".keep"
          else
              echo ".keep file not found, doing nothing."
          fi
          git commit -m "Initial commit"
          QODANA_PR_SHA=$(git rev-parse HEAD)
          echo "QODANA_PR_SHA=$QODANA_PR_SHA" >> $GITHUB_ENV
          git checkout -b new-feature
          git add .
          git commit -m "Add new feature"
        working-directory: '${{ matrix.directory }}'
        shell: bash
#      - name: Download distribution
#        shell: pwsh
#        run: |
#          curl "https://drive.usercontent.google.com/download?id={1W1Fv-zuluNX7V_LThVu6RB1mmnGf4XKN}&confirm=xxx" -o goland-251.27027.win.zip
#      - name: Unpack GoLand IDE and Set Path
#        if: runner.os == 'Windows'
#        shell: pwsh
#        run: |
#          $zipPath = "goland-251.27027.win.zip"
#          $destDir = Join-Path $env:RUNNER_TEMP "goland-unpacked"
#
#          Expand-Archive -Path $zipPath -DestinationPath $destDir -Force
#
#          Write-Host "GoLand executable path found at: $destDir"
#
#          echo "QODANA_DIST=$destDir" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Qodana
        uses: ./
        with:
          args: ${{ format('-i,{0},{1}', matrix.directory, matrix.arguments) }}
          pr-mode: ${{ matrix.pr }}
          post-pr-comment: false
          use-annotations: false
          use-caches: false
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_PROJECT_TESTS_TOKEN }}
          QODANA_PR_SHA: ${{ env.QODANA_PR_SHA }}
      - name: Show logs
        if: failure()
        run: cat ${{ runner.temp }}/qodana/results/log/idea.log