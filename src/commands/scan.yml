description: >
  Scan a project with Qodana.
  It runs Qodana `scan` command and reports the results.
  Note that most options can be configured via qodana.yaml
  (https://www.jetbrains.com/help/qodana/qodana-yaml.html) file.
  To send reports from CircleCI to Qodana Cloud, all you need to do
  is to set `QODANA_TOKEN` environment variable in your project settings.
  To learn more, see https://www.jetbrains.com/help/qodana/circleci.html
parameters:
  args:
    type: string
    default: ""
    description: >
      Additional Qodana CLI `scan` command arguments
      (https://github.com/jetbrains/qodana-cli#scan).
      Optional.
  results-dir:
    type: string
    default: "/tmp/qodana/results"
    description: >
      Directory to store the analysis results. Optional.
  artifact-name:
    type: string
    default: "qodana-report"
    description: >
      Specify Qodana results artifact name,
      used for results uploading.
      Optional.
  cache-dir:
    type: string
    default: "/tmp/cache/qodana"
    description: >
      Directory to store Qodana caches.
      Optional.
  primary-cache-key:
    type: string
    default: qodana-2023.1-<< pipeline.git.branch >>-<< pipeline.git.revision >>
    description: >
      Allows customizing the primary cache hash.
      Optional.
  additional-cache-key:
    type: string
    default: qodana-2023.1-<< pipeline.git.branch >>
    description: >
      Allows customizing the additional cache hash.
      Optional.
steps:
  - restore_cache:
      keys:
        - << parameters.primary-cache-key >>
        - << parameters.additional-cache-key >>
  - run:
      name: Qodana Scan
      command: |
        set -e
        QODANA_SHA_256=9a0b08d9dde9fc3def8fa3db681d62eaaa5b8f3f69df75a92b722175afc75681
        CLI_DIRECTORY=/tmp/cache/qodana-cli/2023.1.1
        mkdir -p $CLI_DIRECTORY
        if [[ ! -x "$CLI_DIRECTORY/qodana" ]]; then
          curl -fsSL https://jb.gg/qodana-cli/install | bash -s -- \
          v2023.1.1 $CLI_DIRECTORY \
          1> /dev/null
        fi
        echo "$QODANA_SHA_256 $CLI_DIRECTORY/qodana" | sha256sum -c
        NONINTERACTIVE=1 $CLI_DIRECTORY/qodana scan \
        --cache-dir << parameters.cache-dir >> \
        -o << parameters.results-dir >> \
        << parameters.args >>
  - store_artifacts:
      path: << parameters.results-dir >>
      destination: << parameters.artifact-name >>
  - save_cache:
      key: < parameters.primary-cache-key >>
      paths:
        - << parameters.cache-dir >>
        - /tmp/cache/qodana-cli/
