name: 'Qodana - Linters'
description: 'Qodana is a code quality monitoring tool that identifies bugs, duplications, and imperfections.'
author: 'JetBrains'

inputs:
  linter:
    description: 'Qodana linter. Possible values: qodana-jvm-community'
    required: true
    default: "qodana-jvm-community"
  project-dir:
    description: 'Project folder to inspect'
    required: false
    default: "${{ github.workspace }}"
  results-dir:
    description: 'Save results to folder'
    required: false
    default: "${{ github.workspace }}/qodana"
  cache-dir:
    description: 'Save cache to folder'
    required: false
    default: "/home/runner/work/_temp/_github_home/qodana-cache"
  inspected-dir:
    description: 'Directory to be inspected. If not specified, the whole project is inspected by default'
    required: false
  idea-config-dir:
    description: 'IntelliJ IDEA configuration directory'
    required: false
  baseline-path:
    description: 'Run in baseline mode. Provide the path to an exisitng SARIF report to be used in the baseline state calculation'
    required: false
  baseline-include-absent:
    description: 'Include in the output report the results from the baseline run that are absent in the current run'
    required: false
    default: false
  fail-threshold:
    description: 'Set the number of problems that will serve as a quality gate. If this number is reached, the inspection run is terminated'
    required: false
  save-html-report:
    description: 'Generate HTML report'
    required: false
    default: false
  profile-name:
    description: 'Name of a profile defined in project'
    required: false
  profile-path:
    description: 'Absolute path to the profile file'
    required: false
  gradle-settings-path:
    description: 'Provide path to gradle.properties file. An example: "/your/custom/path/gradle.properties"'
    required: false
  additional-volumes:
    description: 'Mount additional volumes to docker container'
    required: false
  additional-env-variables:
    description: 'Pass additional environment variables to docker container'
    required: false
outputs:
  results-sarif-path:
    description: 'Qodana results in the SARIF format.'
    value: "${{ inputs.results-dir }}/report.sarif"
  results-json-path:
    description: 'Qodana results in the JSON format.'
    value: "${{ inputs.results-dir }}/qodana.sarif.json"
runs:
  using: 'composite'
  steps:
    - run: "${GITHUB_ACTION_PATH}/run_qodana.sh"
      shell: bash
      env:
        LINTER: "${{ inputs.linter }}"
        PROJECT_DIR: "${{ inputs.project-dir }}"
        RESULTS_DIR: "${{ inputs.results-dir }}"
        CACHE_DIR: "${{ inputs.cache-dir }}"
        INSPECTED_DIR: "${{ inputs.inspected-dir }}"
        BASELINE_PATH: "${{ inputs.baseline-path }}"
        BASELINE_INCLUDE_ABSENT: "${{ inputs.baseline-include-absent }}"
        FAIL_THRESHOLD: "${{ inputs.fail-threshold }}"
        SAVE_HTML_REPORT: "${{ inputs.save-html-report }}"
        PROFILE_NAME: "${{ inputs.profile-name }}"
        PROFILE_PATH: "${{ inputs.profile-path }}"
        GRADLE_SETTINGS_PATH: "${{ inputs.gradle-settings-path }}"
        ADDITIONAL_VOLUMES: "${{ inputs.additional-volumes }}"
        ADDITIONAL_ENV_VARIABLES: "${{ inputs.additional-env-variables }}"
    - name: Upload Report
      uses: actions/upload-artifact@v2.2.4
      with:
        name: Qodana Report
        path: "${{ inputs.results-dir }}/results/*"
        if-no-files-found: ignore

